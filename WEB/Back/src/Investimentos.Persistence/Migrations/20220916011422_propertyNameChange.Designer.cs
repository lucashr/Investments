// <auto-generated />
using System;
using Investimentos.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Investimentos.Persistence.Migrations
{
    [DbContext(typeof(InvestmentsContext))]
    [Migration("20220916011422_propertyNameChange")]
    partial class propertyNameChange
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("Investimentos.Domain.Models.DetailedFunds", b =>
                {
                    b.Property<string>("FundCode")
                        .HasColumnType("TEXT");

                    b.Property<double>("AverageVacancy")
                        .HasColumnType("REAL");

                    b.Property<double>("CapRate")
                        .HasColumnType("REAL");

                    b.Property<double>("DividendYield")
                        .HasColumnType("REAL");

                    b.Property<double>("FFOYield")
                        .HasColumnType("REAL");

                    b.Property<double>("Liquidity")
                        .HasColumnType("REAL");

                    b.Property<double>("NumberOfProperties")
                        .HasColumnType("REAL");

                    b.Property<double>("PriceEquityValue")
                        .HasColumnType("REAL");

                    b.Property<double>("Quotation")
                        .HasColumnType("REAL");

                    b.Property<double>("RentPerSquareMeter")
                        .HasColumnType("REAL");

                    b.Property<string>("Segment")
                        .HasColumnType("TEXT");

                    b.Property<double>("SquareMeterPrice")
                        .HasColumnType("REAL");

                    b.Property<double>("ValueOfMarket")
                        .HasColumnType("REAL");

                    b.HasKey("FundCode");

                    b.ToTable("DetailedFunds");
                });

            modelBuilder.Entity("Investimentos.Domain.Models.Funds", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FundCode")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Funds");
                });

            modelBuilder.Entity("Investimentos.Domain.Models.FundsYeld", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DatePayment")
                        .HasColumnType("TEXT");

                    b.Property<string>("FundCode")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastComputedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("FundsYeld");
                });

            modelBuilder.Entity("Investimentos.Domain.Models.RankOfTheBestFunds", b =>
                {
                    b.Property<string>("FundCode")
                        .HasColumnType("TEXT");

                    b.Property<double>("AverageVacancy")
                        .HasColumnType("REAL");

                    b.Property<double>("CoefficientOfVariation")
                        .HasColumnType("REAL");

                    b.Property<double>("DividendYield")
                        .HasColumnType("REAL");

                    b.Property<int>("DividendYieldRanking")
                        .HasColumnType("INTEGER");

                    b.Property<double>("FFOYield")
                        .HasColumnType("REAL");

                    b.Property<double>("Liquidity")
                        .HasColumnType("REAL");

                    b.Property<int>("MultiplierRanking")
                        .HasColumnType("INTEGER");

                    b.Property<double>("PriceEquityValue")
                        .HasColumnType("REAL");

                    b.Property<int>("RankPrice")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Segment")
                        .HasColumnType("TEXT");

                    b.Property<double>("ValueOfMarket")
                        .HasColumnType("REAL");

                    b.HasKey("FundCode");

                    b.ToTable("RankFunds");
                });
#pragma warning restore 612, 618
        }
    }
}
